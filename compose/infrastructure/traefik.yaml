# Traefik handles the reverse proxy and certificates validation.
secrets:
  lets_encrypt_cloudflare_acme:
    file: $DOCKER_SECRETS_DIR/lets_encrypt_cloudflare_acme
  cloudflare_email:
    file: $DOCKER_SECRETS_DIR/cloudflare_email

services:
  traefik:
    container_name: traefik
    image: docker.io/library/traefik:latest
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      CLOUDFLARE_DNS_API_TOKEN_FILE: /run/secrets/lets_encrypt_cloudflare_acme
      CLOUDFLARE_EMAIL_FILE: /run/secrets/cloudflare_email
    secrets:
      - lets_encrypt_cloudflare_acme
      - cloudflare_email
    volumes:
      # Docker Network access.
      # * :ro - Read Only.
      - $DOCKER_SOCK_DIR:ro
      
      # Configuration file path.
      # * :ro - Read Only.
      - $DOCKER_CONFIG_DIR/traefik/config.yaml:/etc/traefik/traefik.yaml:ro
      
      # LetsEncrypt persistant data.
      # * :rw - Read and Write.
      - $DOCKER_DATA_DIR/letsencrypt:/letsencrypt:rw
    network_mode: host
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-router.rule=Host(`traefik.homeserver.lukan.rocks`)
      - traefik.http.routers.traefik-router.entrypoints=web,websecure
      - traefik.http.routers.traefik-router.tls=true
      - traefik.http.routers.traefik-router.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik-router.service=api@internal
      - traefik.http.services.api@internal.loadbalancer.server.port=8080